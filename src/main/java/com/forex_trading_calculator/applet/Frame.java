package com.forex_trading_calculator.applet;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

/**
 * User: Andrei Kolosok
 */
public class Frame extends JFrame {

	private JPanel panel;
	private JComboBox symbol;
	private JComboBox period;
	private JButton goToStart;
	private JButton pause;
	private JButton stop;
	private JButton goToEnd;
	private JTextField playSpeed;
	private JSlider volumeSlider;
	private JTextField volume;
	private JPanel graph;

	public Frame() throws HeadlessException {
		super("Forex Applet");

		setContentPane(panel);
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel = new JPanel();
		panel.setLayout(new GridLayoutManager(3, 11, new Insets(10, 10, 10, 10), -1, -1));
		panel.setEnabled(true);
		symbol = new JComboBox();
		panel.add(symbol, new GridConstraints(0, 0, 1, 4, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, 20), new Dimension(100, 20), new Dimension(100, 20), 0, false));
		goToStart = new JButton();
		goToStart.setIcon(new ImageIcon(getClass().getResource("/goToStart.JPG")));
		goToStart.setText("");
		panel.add(goToStart, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 20), new Dimension(25, 20), new Dimension(25, 20), 0, false));
		pause = new JButton();
		pause.setIcon(new ImageIcon(getClass().getResource("/pause.JPG")));
		pause.setText("");
		panel.add(pause, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 20), new Dimension(25, 20), new Dimension(25, 20), 0, false));
		stop = new JButton();
		stop.setHorizontalTextPosition(2);
		stop.setIcon(new ImageIcon(getClass().getResource("/stop.JPG")));
		stop.setText("");
		panel.add(stop, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 20), new Dimension(25, 20), new Dimension(25, 20), 0, false));
		goToEnd = new JButton();
		goToEnd.setHorizontalTextPosition(2);
		goToEnd.setIcon(new ImageIcon(getClass().getResource("/goToEnd.JPG")));
		goToEnd.setText("");
		panel.add(goToEnd, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 20), new Dimension(25, 20), new Dimension(25, 20), 0, false));
		final Spacer spacer1 = new Spacer();
		panel.add(spacer1, new GridConstraints(1, 8, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final JButton button1 = new JButton();
		button1.setIcon(new ImageIcon(getClass().getResource("/speedDown.JPG")));
		button1.setText("");
		panel.add(button1, new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 20), new Dimension(25, 20), new Dimension(25, 20), 0, false));
		playSpeed = new JTextField();
		panel.add(playSpeed, new GridConstraints(1, 6, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(30, 20), new Dimension(30, 20), new Dimension(30, 20), 0, false));
		final JButton button2 = new JButton();
		button2.setHorizontalTextPosition(2);
		button2.setIcon(new ImageIcon(getClass().getResource("/speedUp.JPG")));
		button2.setText("");
		panel.add(button2, new GridConstraints(1, 7, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(25, 20), new Dimension(25, 20), new Dimension(25, 20), 0, false));
		volumeSlider = new JSlider();
		volumeSlider.setMaximum(10);
		volumeSlider.setOrientation(0);
		volumeSlider.setPaintLabels(false);
		volumeSlider.setPaintTicks(true);
		volumeSlider.setPaintTrack(true);
		volumeSlider.setSnapToTicks(false);
		volumeSlider.setValue(4);
		panel.add(volumeSlider, new GridConstraints(1, 9, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(50, 20), new Dimension(50, 20), new Dimension(50, 20), 0, false));
		volume = new JTextField();
		panel.add(volume, new GridConstraints(1, 10, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(30, 20), new Dimension(30, 20), new Dimension(30, 20), 0, false));
		graph = new JPanel();
		graph.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1, false, true));
		graph.setBackground(new Color(-1));
		panel.add(graph, new GridConstraints(2, 0, 1, 11, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		period = new JComboBox();
		panel.add(period, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, 20), new Dimension(100, 20), new Dimension(100, 20), 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel;
	}
}
